// Code generated by ent, DO NOT EDIT.

package ent

import (
	"github.com/aidosgal/neuron/ent/admin"
	"github.com/aidosgal/neuron/ent/device"
	"github.com/aidosgal/neuron/ent/schema"
	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	adminFields := schema.Admin{}.Fields()
	_ = adminFields
	// adminDescLogin is the schema descriptor for login field.
	adminDescLogin := adminFields[0].Descriptor()
	// admin.LoginValidator is a validator for the "login" field. It is called by the builders before save.
	admin.LoginValidator = adminDescLogin.Validators[0].(func(string) error)
	deviceFields := schema.Device{}.Fields()
	_ = deviceFields
	// deviceDescDeviceName is the schema descriptor for device_name field.
	deviceDescDeviceName := deviceFields[1].Descriptor()
	// device.DeviceNameValidator is a validator for the "device_name" field. It is called by the builders before save.
	device.DeviceNameValidator = deviceDescDeviceName.Validators[0].(func(string) error)
	// deviceDescID is the schema descriptor for id field.
	deviceDescID := deviceFields[0].Descriptor()
	// device.DefaultID holds the default value on creation for the id field.
	device.DefaultID = deviceDescID.Default.(func() uuid.UUID)
}
